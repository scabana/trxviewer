@using Models

<div>
    <h3>
        Outcome:
        <span
            style="color: @( Value.ResultSummary.Outcome == Outcomes.Failed ? "var(--red, red)": "var(--green, green)" )">
            @Value.ResultSummary.Outcome</span>
    </h3>
</div>
<div>
    <fast-text-field @onchange=Filter placeholder="Filter" style="display: block;"></fast-text-field>
    <fast-accordion>
        @foreach (var group in Value.Results.GroupBy(i => i.Outcome).OrderByDescending(i => i.Key))
        {
            <UnitTestResultGroup Result=@group.Key Values=@group Filter=@_filter />
        }
    </fast-accordion>
</div>

@code {
    [Parameter]
    public TestRunModel Value { get; set; }

    private string _filter = "";



    private void Filter(ChangeEventArgs args)
    {
        _filter = args.Value as string;
    }
}